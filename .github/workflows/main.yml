name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull request to the main branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the code
      uses: actions/checkout@v2  # This checks out the repository

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username from GitHub Secrets
        password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub PAT from GitHub Secrets

    - name: Build the Docker image
      run: |
        sudo docker build -t static-website .

    - name: Run the Docker container
      run: |
        sudo docker run -d -p 8080:80 static-website  # Run the container on port 8080

    - name: Push the Docker image to Docker Hub
      run: docker push static-website  # Push the image to Docker Hub

  deploy:
    runs-on: ubuntu-latest
    needs: build  # This job will run only after the build job completes
    steps:
    - name: SSH into EC2 and Deploy Docker Container
      uses: appleboy/ssh-action@v0.1.0
      with:
        host: ${{ secrets.EC2_HOST }}  # Store EC2 instance IP in GitHub Secrets
        username: ${{ secrets.EC2_USER }}  # Store EC2 username in GitHub Secrets
        key: ${{ secrets.EC2_SSH_KEY }}  # Store the private SSH key in GitHub Secrets
        port: 22
        script: |
          cd /home/ubuntu/Cloud-Driven-Static-Website-Deployment  # Use the correct path to your project on EC2
          sudo docker pull static-website
          sudo docker stop $(sudo docker ps -q --filter "name=static-website") || true
          sudo docker run -d -p 8080:80 static-website

